import telebot
from web_tests_config import keys, TOKEN
from web_tests_utils import ConvertionException, CryptoConvert

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start', 'help'])
def repeat_start(message: telebot.types.Message):
    bot.reply_to(message, "Чтобы начать работу, введите команду боту \
в следующем формате: <имя валюты> <в какую валюту перевести> <количество \
переводимой валюты>. Увидеть список всех доступных валют: /values")
    #bot.send_message(message.chat.id, f"Привет, {message.chat.username}")
    #bot.reply_to(message, f'Привет, {message.chat.username}!')

@bot.message_handler(commands=['values', ])
def repeat_values(message: telebot.types.Message):
    text = 'Доступные валюты: '
    for key in keys.keys():
        text = '\n'.join((text, key))
    bot.reply_to(message, text)

@bot.message_handler(content_types=['text', ])
def repeat_values(message: telebot.types.Message):
    try:
        values = message.text.split(' ')

        if len(values) != 3:
            raise ConvertionException("Неправильное количество аргументов")

        money_to_trade, money_trading, amount = values
        total = CryptoConvert.convert(money_to_trade, money_trading, amount)
        total = format(total, '.2f')
    except ConvertionException as e:
        bot.reply_to(message, f'Ошибка пользователя:\n{e}')
    except Exception as e:
        bot.reply_to(message, f'Не удалось обработать команду\n{e}')
    else:
        text = f'Цена {amount} {money_to_trade} в {money_trading} - {total}'
        bot.send_message(message.chat.id, text)
bot.polling(none_stop=True)
